name: Build-Deploy-Preprod
on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/familie-ba-mottak:${{ github.sha }}
  IMAGE_UTEN_TAG: docker.pkg.github.com/navikt/familie-ba-mottak/familie-ba-mottak

jobs:
  pre_ci:
    name: Prepare CI environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          # We need to fetch with a depth of 2 for pull_request so we can do HEAD^2
          fetch-depth: 2

      - name: "[Push] Get commit message"
        if: github.event_name == 'push'
        id: push_get_commit_message
        run:
          echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD | tr \" \')

      - name: "[Pull Request] Get commit message"
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run: echo ::set-output name=pr_commit_message::$(git log --format=%B -n 1 HEAD^2 | tr \" \')

    outputs:
      commit_message: $( [ -z "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" ] && echo "${{ steps.push_get_commit_message.outputs.push_commit_message }}" || echo "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" )

  deploy-to-dev:
    if: github.event.pull_request.user.login != 'dependabot[bot]'
    needs: pre_ci
    name: Bygg app/image, push til github, deploy til dev-fss
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Log commit message
        run: echo "${{ needs.pre_ci.outputs.commit_message }}"
      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
      - uses: actions/cache@v2.1.6
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Bygg med maven + sonar
        env:
          SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: mvn -B --no-transfer-progress package verify sonar:sonar --settings .m2/maven-settings.xml --file pom.xml
      - name: Bygg Docker image
        run: |
          docker build -t ${IMAGE} -t ${IMAGE_UTEN_TAG}:latest .
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_DOCKER_PUSH_PACKAGE_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Push Docker image
        run: docker push $IMAGE
      - name: Checkout e2e tests
        if: "!contains(needs.pre_ci.outputs.commit_message, 'e2e skip')"
        uses: actions/checkout@v2.3.4
        with:
          repository: navikt/familie-ba-e2e
          token: ${{ secrets.READER_TOKEN }}
          path: ba-e2e
      - name: Setter riktig ba-mottak versjon i e2e tester
        if: "!contains(needs.pre_ci.outputs.commit_message, 'e2e skip')"
        run: sed -i 's/familie-ba-mottak:latest/familie-ba-mottak:'$GITHUB_SHA'/g' ba-e2e/e2e/docker-compose.yml
      - name: Start alle apper (e2e)
        env:
          MOTTAK_CLIENT_ID: ${{ secrets.MOTTAK_CLIENT_ID }}
          MOTTAK_FRONTEND_CLIENT_ID: ${{ secrets.MOTTAK_FRONTEND_CLIENT_ID }}
          MOTTAK_CLIENT_SECRET: ${{ secrets.MOTTAK_CLIENT_SECRET }}
          MOTTAK_BA_SAK_SCOPE: ${{ secrets.MOTTAK_BA_SAK_SCOPE }}
          MOTTAK_FAMILIE_INTEGRASJONER_SCOPE: ${{ secrets.MOTTAK_FAMILIE_INTEGRASJONER_SCOPE }}
          INTEGRASJONER_CLIENT_ID: ${{ secrets.INTEGRASJONER_CLIENT_ID }}
          INTEGRASJONER_CLIENT_SECRET: ${{ secrets.INTEGRASJONER_CLIENT_SECRET }}
          INTEGRASJONER_INFOTRYGD_KS_SCOPE: ${{ secrets.INTEGRASJONER_INFOTRYGD_KS_SCOPE }}
          INTEGRASJONER_AAD_GRAPH_SCOPE: ${{ secrets.INTEGRASJONER_AAD_GRAPH_SCOPE }}
          SAK_CLIENT_ID: ${{ secrets.SAK_CLIENT_ID }}
          SAK_FRONTEND_CLIENT_ID: ${{ secrets.SAK_FRONTEND_CLIENT_ID }}
          SAK_CLIENT_SECRET: ${{ secrets.SAK_CLIENT_SECRET}}
          INTEGRASJONER_SCOPE: ${{ secrets.INTEGRASJONER_SCOPE }}
          OPPDRAG_SCOPE: ${{ secrets.OPPDRAG_SCOPE }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          SAK_FRONTEND_CLIENT_SECRET: ${{ secrets.SAK_FRONTEND_CLIENT_SECRET }}
          BA_SAK_SCOPE: ${{ secrets.BA_SAK_SCOPE }}
          OPPDRAG_CLIENT_ID: ${{ secrets.OPPDRAG_CLIENT_ID }}
          SRVUSER_BA_SAK_SECRET: ${{ secrets.SRVUSER_BA_SAK_SECRET }}
          SAF_SCOPE: ${{ secrets.SAF_SCOPE }}
        if: "!contains(needs.pre_ci.outputs.commit_message, 'e2e skip')"
        run: cd ba-e2e/e2e; ./e2e.sh
      - name: Kj√∏r tester (e2e)
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: "!contains(needs.pre_ci.outputs.commit_message, 'e2e skip')"
        run: cd ba-e2e/autotest; mvn --settings .m2/maven-settings.xml -Dtest="**" test
      - name: Samle Docker-logs ved feil
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: './logs'
      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs
      - name: Laste opp logs til GitHub
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: docker-logs-${{ github.run_number }}.tgz
          path: ./logs.tgz
          retention-days: 2
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: app-preprod.yaml
